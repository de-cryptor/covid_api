package main

import (
	"context"
	"fmt"
	"log"
	"os"

	"github.com/go-redis/redis/v8"
	"github.com/joho/godotenv"
	"github.com/labstack/echo/v4"
	echoSwagger "github.com/swaggo/echo-swagger"
	"go.mongodb.org/mongo-driver/mongo"
	"go.mongodb.org/mongo-driver/mongo/options"
	"go.mongodb.org/mongo-driver/mongo/readpref"

	_ "github.com/swaggo/echo-swagger/example/docs" // docs is generated by Swag CLI, you have to import it.

	"covid_api/covidstats"
)

// Server Entry point
func main() {
	// create cache connection
	cache := redis.NewClient(&redis.Options{
		Addr:     "redis-16955.c276.us-east-1-2.ec2.cloud.redislabs.com:16955",
		Password: "zZn3BO5HFALEtPqjzZBwnXrbWfLsBDgY", // no password set
		DB:       0,                                  // use default DB
	})

	// create mongo client connection
	db, err := mongo.NewClient(options.
		Client().
		ApplyURI("mongodb+srv://admin:admin@cluster0.eyvfq.mongodb.net/test"))

	err = db.Connect(context.Background())
	if err != nil {
		log.Fatal(err)
	}
	// disconnect before application is closed
	defer db.Disconnect(context.Background())
	// ping to check if the connection is working
	err = db.Ping(context.Background(), readpref.Primary())
	if err != nil {
		log.Fatal(err)
	}

	e := echo.New()
	godotenv.Load()
	port := os.Getenv("PORT")
	address := fmt.Sprintf("%s:%s", "0.0.0.0", port)
	e.GET("/swagger/*", echoSwagger.WrapHandler)
	e.GET("/covid/stats", covidstats.HandleStats(cache, db))
	e.Logger.Fatal(e.Start(address))
}
